import * as React from "react";
declare type MetaMaskInitializing = {
    account: null;
    chainId: null;
    status: "initializing";
};
declare type MetaMaskUnavailable = {
    account: null;
    chainId: null;
    status: "unavailable";
};
declare type MetaMaskNotConnected = {
    account: null;
    chainId: string;
    status: "notConnected";
};
declare type MetaMaskConnecting = {
    account: null;
    chainId: string;
    status: "connecting";
};
declare type MetaMaskConnected = {
    account: string;
    chainId: string;
    status: "connected";
};
export declare type MetaMaskState = MetaMaskInitializing | MetaMaskUnavailable | MetaMaskNotConnected | MetaMaskConnecting | MetaMaskConnected;
export declare type IMetaMaskContext = MetaMaskState & {
    connect: () => Promise<string[] | null>;
    ethereum: any;
};
export declare const MetamaskContext: React.Context<(MetaMaskInitializing & {
    connect: () => Promise<string[] | null>;
    ethereum: any;
}) | (MetaMaskUnavailable & {
    connect: () => Promise<string[] | null>;
    ethereum: any;
}) | (MetaMaskNotConnected & {
    connect: () => Promise<string[] | null>;
    ethereum: any;
}) | (MetaMaskConnecting & {
    connect: () => Promise<string[] | null>;
    ethereum: any;
}) | (MetaMaskConnected & {
    connect: () => Promise<string[] | null>;
    ethereum: any;
}) | undefined>;
export {};
